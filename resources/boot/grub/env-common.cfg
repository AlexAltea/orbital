### Environment
hw.memtest.tests=0
hw.clflush_disable=1
#hw.acpi.verbose=1
#hw.usb.xhci.debug=1
#kern.init_safe_mode=0
#kern.geom.label.debug=2
#kern.geom.debugflags=255
#kern.maxusers=
#kern.maxproc=
#kern.ncallout=
#kern.ipc.maxpipekva=

# HACK:
# During TSC synchronization tests, FreeBSD/Orbis checks whether whether
# the TSCs in all CPUs are sychronized. It does so by repeatedly querying
# via `smp_rendezvous` three functions that store the current TSC. this
# Since these three functions are separated by SMP barriers, the kernel just
# checks that all stages contain values larger than the previous stage.
# This assumption breaks on some hypervisors, e.g. HAXM, which is why the
# test is skipped if `vm_guest` is enabled. We enable it by specifying
# a `smbios.bios.vendor` value matching an emulator, e.g. "QEMU".
# As a side-effect of removing this test, we reduce boot time 10 seconds.
#
# TODO: In the future, we should try to fix that directly at HAXM-level.
# NOTE: This hack exposes a bug in the GC drivers. When `vm_guest` is enabled,
#       the kernel changes the default hz from 1000 to 100. The `gc_open`
#       function calls `pause` with a timeout value of 0 if `hz` is 100.
#       We fix that by hardcoding the default value of `hz` in non-guests.
smbios.bios.vendor=QEMU
kern.hz=1000

### Loader

# Enable debug
# ====================
# Used by `sceSblRcMgrIsAllowSLDebugger`
write_byte 0x9B496 0x4 0x4
write_byte 0x9B4B9 0x2 0x2


### IDPS

# Unknown
# ====================
write_dword 0x9B498 0x0

# Product Code: Unknown
# ====================
# Used by `sceSblAIMgrIs*` functions. Seems to be always 0x01.
write_byte 0x9B49C 0x01

# Product Code: Target ID
# =======================
# These values are stored in big-endian format.
# Used by `sceSblAIMgrIs*` functions.
# Values:
# - 0x80  Diag (TEST)
# - 0x81  DevKit (TOOL)
# - 0x82  TestKit (DEX)
# - 0x83  Retail (CEX:J1)
# - 0x84  Retail (CEX:UC2)
# - 0x85  Retail (CEX:CEL)
# - 0x86  Retail (CEX:KR2)
# - 0x87  Retail (CEX:CEK)
# - 0x88  Retail (CEX:MX2)
# - 0x89  Retail (CEX:AU3)
# - 0x8A  Retail (CEX:E12)
# - 0x8B  Retail (CEX:TW1)
# - 0x8C  Retail (CEX:RU3)
# - 0x8D  Retail (CEX:CN9)
# - 0x8E  Retail (CEX:HK5)
# - 0x8F  Retail (CEX:BR2)
# - 0x90  Retail (CEX:?)
# - 0x91  Retail (CEX:?)
# - 0xA0  ???
write_byte 0x9B49D 0x82

# Product Subcode
# ===============
write_byte 0x9B49E 0x00
write_byte 0x9B49F 0x00

# Chasis Check
# ============
write_byte 0x9B4A0 0x00
write_byte 0x9B4A1 0x00

# Identifier
# ==========
write_byte 0x9B4A0 0x11
write_byte 0x9B4A1 0x22
write_byte 0x9B4A2 0x33
write_byte 0x9B4A3 0x44
write_byte 0x9B4A4 0x55
write_byte 0x9B4A5 0x66


### ??? (Copied straight from 5.01 dump)

# TSC frequency
# =============
# This represents the frequency of TSC ticks in the CPU divided by 996250.
# The value for the PS4 CPU is 0x640.
# TODO: Might require to be configured by the emulator to match the
# host CPU TSC frequency to prevent timing issues during virtualization.
write_word 0x9B6BC 0x640

# Unknown
write_byte 0x9B6BF 0xFF

# Unknown
write_dword 0x9B6C4 0x0
write_dword 0x9B6C8 0x0

# ...

# Unknown
write_byte 0x9B6DD 0xFF

# Unknown
write_dword 0x9BB44 0xFFFFFFFF

# Unknown
write_dword 0x9BB48 0x00000001


### Starsha
# This region is 0x400 bytes in size
write_byte 0x9B744 0x00
